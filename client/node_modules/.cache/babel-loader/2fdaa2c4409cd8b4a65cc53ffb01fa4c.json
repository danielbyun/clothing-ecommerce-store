{"ast":null,"code":"import _defineProperty from \"/Users/DanielByun/Documents/java/udemy/completeReactDeveloperCourse/clothing-ecommerce-store/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/DanielByun/Documents/java/udemy/completeReactDeveloperCourse/clothing-ecommerce-store/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/DanielByun/Documents/java/udemy/completeReactDeveloperCourse/clothing-ecommerce-store/src/Components/SignUp/SignUp.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport FormInput from \"../Form-Input/Form-Input\";\nimport CustomButton from \"../Custom-Button/Custom-Button\"; // import { auth, createUserProfileDocument } from \"../../Firebase/Firebase.utils\";\n\nimport \"./SignUp.scss\";\nimport { SignUpContainer, SignUpTitle } from \"./SignUpStyled\";\nimport { signUpStart } from \"../../redux/actions/userActions\";\nimport { connect } from \"react-redux\";\n\nconst SignUp = props => {\n  const _useState = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        currentUser = _useState2[0],\n        setCurrentUser = _useState2[1];\n\n  const signUpStart = props.signUpStart;\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const displayName = currentUser.displayName,\n          email = currentUser.email,\n          password = currentUser.password,\n          confirmPassword = currentUser.confirmPassword;\n\n    if (password !== confirmPassword) {\n      alert(\"Passwords don't match!\");\n      return;\n    } // try {\n    //   const { user } = await auth.createUserWithEmailAndPassword(\n    //     email,\n    //     password\n    //   );\n    //   await createUserProfileDocument(user, { displayName });\n    //   setCurrentUser({\n    //     displayName: \"\",\n    //     email: \"\",\n    //     password: \"\",\n    //     confirmPassword: \"\"\n    //   });\n    // } catch (error) {\n    //   console.error(error);\n    // }\n\n\n    console.log(\"start signup\");\n    signUpStart({\n      displayName,\n      email,\n      password,\n      confirmPassword\n    });\n  };\n\n  const handleChange = e => {\n    const _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n    setCurrentUser(_objectSpread({}, currentUser, {\n      [name]: value\n    }));\n  };\n\n  const displayName = currentUser.displayName,\n        email = currentUser.email,\n        password = currentUser.password,\n        confirmPassword = currentUser.confirmPassword;\n  return React.createElement(SignUpContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(SignUpTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"I do not have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Sing Up with your email and password.\"), React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange,\n    label: \"Display Name\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    label: \"password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"SIGN UP\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: (displayName, email, password, confirmPassword) => dispatch(signUpStart(displayName, email, password, confirmPassword))\n});\n\nexport default connect(null, {\n  mapDispatchToProps\n})(SignUp);","map":{"version":3,"sources":["/Users/DanielByun/Documents/java/udemy/completeReactDeveloperCourse/clothing-ecommerce-store/src/Components/SignUp/SignUp.js"],"names":["React","useState","FormInput","CustomButton","SignUpContainer","SignUpTitle","signUpStart","connect","SignUp","props","displayName","email","password","confirmPassword","currentUser","setCurrentUser","handleSubmit","e","preventDefault","alert","console","log","handleChange","target","name","value","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport FormInput from \"../Form-Input/Form-Input\";\nimport CustomButton from \"../Custom-Button/Custom-Button\";\n\n// import { auth, createUserProfileDocument } from \"../../Firebase/Firebase.utils\";\n\nimport \"./SignUp.scss\";\nimport { SignUpContainer, SignUpTitle } from \"./SignUpStyled\";\nimport { signUpStart } from \"../../redux/actions/userActions\";\nimport { connect } from \"react-redux\";\n\nconst SignUp = props => {\n  const [currentUser, setCurrentUser] = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  const { signUpStart } = props;\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const { displayName, email, password, confirmPassword } = currentUser;\n\n    if (password !== confirmPassword) {\n      alert(\"Passwords don't match!\");\n      return;\n    }\n\n    // try {\n    //   const { user } = await auth.createUserWithEmailAndPassword(\n    //     email,\n    //     password\n    //   );\n\n    //   await createUserProfileDocument(user, { displayName });\n\n    //   setCurrentUser({\n    //     displayName: \"\",\n    //     email: \"\",\n    //     password: \"\",\n    //     confirmPassword: \"\"\n    //   });\n    // } catch (error) {\n    //   console.error(error);\n    // }\n    console.log(\"start signup\");\n    signUpStart({ displayName, email, password, confirmPassword });\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setCurrentUser({\n      ...currentUser,\n      [name]: value\n    });\n  };\n\n  const { displayName, email, password, confirmPassword } = currentUser;\n  return (\n    <SignUpContainer>\n      <SignUpTitle>I do not have an account</SignUpTitle>\n      <span>Sing Up with your email and password.</span>\n      <form className=\"sign-up-form\" onSubmit={handleSubmit}>\n        <FormInput\n          type=\"text\"\n          name=\"displayName\"\n          value={displayName}\n          onChange={handleChange}\n          label=\"Display Name\"\n          required\n        />\n        <FormInput\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={handleChange}\n          label=\"Email\"\n          required\n        />\n        <FormInput\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={handleChange}\n          label=\"password\"\n          required\n        />\n        <FormInput\n          type=\"password\"\n          name=\"confirmPassword\"\n          value={confirmPassword}\n          onChange={handleChange}\n          label=\"Confirm Password\"\n          required\n        />\n        <CustomButton type=\"submit\">SIGN UP</CustomButton>\n      </form>\n    </SignUpContainer>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: (displayName, email, password, confirmPassword) =>\n    dispatch(signUpStart(displayName, email, password, confirmPassword))\n});\n\nexport default connect(null, { mapDispatchToProps })(SignUp);\n"]},"metadata":{},"sourceType":"module"}