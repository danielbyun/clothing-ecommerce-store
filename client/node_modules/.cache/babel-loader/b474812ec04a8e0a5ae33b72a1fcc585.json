{"ast":null,"code":"// actual code that combines all the state together\n// break the code up to individual sections\nimport { combineReducers } from \"redux\";\nimport { persistReducer } from \"redux-persist\"; // localStorage object\n\nimport storage from \"redux-persist/lib/storage\";\nimport userReducer from \"./userReducer\";\nimport cartReducer from \"./cartReducer\";\nimport directoryReducer from \"./directoryReducer\"; // how to tell the persistReducer to store our state\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  // array containing the string names of any of the reducer that we want to store\n  whitelist: [\"cart\"]\n};\nconst rootReducer = combineReducers({\n  user: userReducer,\n  cart: cartReducer,\n  directory: directoryReducer\n});\nexport default persistReducer(persistConfig, rootReducer);","map":{"version":3,"sources":["/Users/DanielByun/Documents/java/udemy/completeReactDeveloperCourse/clothing-ecommerce-store/src/redux/reducer/rootReducer.js"],"names":["combineReducers","persistReducer","storage","userReducer","cartReducer","directoryReducer","persistConfig","key","whitelist","rootReducer","user","cart","directory"],"mappings":"AAAA;AACA;AACA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,eAA/B,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B,C,CAEA;;AACA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBL,EAAAA,OAFoB;AAGpB;AACAM,EAAAA,SAAS,EAAE,CAAC,MAAD;AAJS,CAAtB;AAOA,MAAMC,WAAW,GAAGT,eAAe,CAAC;AAClCU,EAAAA,IAAI,EAAEP,WAD4B;AAElCQ,EAAAA,IAAI,EAAEP,WAF4B;AAGlCQ,EAAAA,SAAS,EAAEP;AAHuB,CAAD,CAAnC;AAMA,eAAeJ,cAAc,CAACK,aAAD,EAAgBG,WAAhB,CAA7B","sourcesContent":["// actual code that combines all the state together\n// break the code up to individual sections\nimport { combineReducers } from \"redux\";\nimport { persistReducer } from \"redux-persist\";\n\n// localStorage object\nimport storage from \"redux-persist/lib/storage\";\n\nimport userReducer from \"./userReducer\";\nimport cartReducer from \"./cartReducer\";\nimport directoryReducer from \"./directoryReducer\";\n\n// how to tell the persistReducer to store our state\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  // array containing the string names of any of the reducer that we want to store\n  whitelist: [\"cart\"]\n};\n\nconst rootReducer = combineReducers({\n  user: userReducer,\n  cart: cartReducer,\n  directory: directoryReducer\n});\n\nexport default persistReducer(persistConfig, rootReducer);\n"]},"metadata":{},"sourceType":"module"}