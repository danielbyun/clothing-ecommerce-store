{"ast":null,"code":"import { compose, createStore, applyMiddleware } from \"redux\"; // cache the store\n\nimport { persistStore } from \"redux-persist\"; // redux logger (shows all the logs on the console)\n\nimport logger from \"redux-logger\"; // redux-thunk that lets redux fire functions\n// import thunk from \"redux-thunk\";\n\nimport rootReducer from \"./reducer/rootReducer\"; // redux-saga\n\nimport createSagaMiddleware from \"redux-saga\";\nimport { fetchCollectionsStart } from \"./saga/shop.saga\";\nconst sagaMiddleware = createSagaMiddleware(); // middleware is an array\n\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === \"development\") {\n  middlewares.push(logger);\n} // put rootReducer and get all the methods from the array\n// technically don't need to export\n\n\nexport const store = createStore(rootReducer, compose(applyMiddleware(...middlewares))); // TODO: run this after writing saga code\n// sagaMiddleware.run();\n\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistStore\n};","map":{"version":3,"sources":["/Users/DanielByun/Documents/java/udemy/completeReactDeveloperCourse/clothing-ecommerce-store/src/redux/store.js"],"names":["compose","createStore","applyMiddleware","persistStore","logger","rootReducer","createSagaMiddleware","fetchCollectionsStart","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","persistor"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,WAAlB,EAA+BC,eAA/B,QAAsD,OAAtD,C,CAEA;;AACA,SAASC,YAAT,QAA6B,eAA7B,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,cAAnB,C,CAEA;AACA;;AAEA,OAAOC,WAAP,MAAwB,uBAAxB,C,CAEA;;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,qBAAT,QAAsC,kBAAtC;AACA,MAAMC,cAAc,GAAGF,oBAAoB,EAA3C,C,CAEA;;AACA,MAAMG,WAAW,GAAG,CAACD,cAAD,CAApB;;AAEA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CH,EAAAA,WAAW,CAACI,IAAZ,CAAiBT,MAAjB;AACD,C,CAED;AACA;;;AACA,OAAO,MAAMU,KAAK,GAAGb,WAAW,CAC9BI,WAD8B,EAE9BL,OAAO,CAACE,eAAe,CAAC,GAAGO,WAAJ,CAAhB,CAFuB,CAAzB,C,CAKP;AACA;;AAEA,OAAO,MAAMM,SAAS,GAAGZ,YAAY,CAACW,KAAD,CAA9B;AAEP,eAAe;AAAEA,EAAAA,KAAF;AAASX,EAAAA;AAAT,CAAf","sourcesContent":["import { compose, createStore, applyMiddleware } from \"redux\";\n\n// cache the store\nimport { persistStore } from \"redux-persist\";\n\n// redux logger (shows all the logs on the console)\nimport logger from \"redux-logger\";\n\n// redux-thunk that lets redux fire functions\n// import thunk from \"redux-thunk\";\n\nimport rootReducer from \"./reducer/rootReducer\";\n\n// redux-saga\nimport createSagaMiddleware from \"redux-saga\";\nimport { fetchCollectionsStart } from \"./saga/shop.saga\";\nconst sagaMiddleware = createSagaMiddleware();\n\n// middleware is an array\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === \"development\") {\n  middlewares.push(logger);\n}\n\n// put rootReducer and get all the methods from the array\n// technically don't need to export\nexport const store = createStore(\n  rootReducer,\n  compose(applyMiddleware(...middlewares))\n);\n\n// TODO: run this after writing saga code\n// sagaMiddleware.run();\n\nexport const persistor = persistStore(store);\n\nexport default { store, persistStore };\n"]},"metadata":{},"sourceType":"module"}