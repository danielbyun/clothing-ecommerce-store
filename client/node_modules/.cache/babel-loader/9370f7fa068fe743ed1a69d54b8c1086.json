{"ast":null,"code":"// effects from sagas that let us do different things\n// listens to every action\nimport { takeEvery, call } from \"redux-saga/effects\";\nimport { FETCH_COLLECTIONS_START, FETCH_COLLECTIONS_SUCCESS, FETCH_COLLECTIONS_FAILURE } from \"../types\";\nimport { firestore } from \"firebase\";\nimport { convertCollectionsSnapshotToMap } from \"../../Firebase/Firebase.utils\";\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from \"../actions/shopActions\"; // async code generator fuction\n\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"fetchCollectionsAsync fired\");\n\n  try {\n    const collectionRef = firestore.collection(\"collections\"); // instead of promise chains, we use generator function\n\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n  } catch (error) {} // async fetch\n  // collectionRef\n  //   .get()\n  //   .then(snapshot => {\n  //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //     // dispatch the succcess call\n  //     dispatch(fetchCollectionsSuccess(collectionsMap));\n  //   })\n  //   .catch(error => dispatch(fetchCollectionsFailure(error.message)));\n\n} // saga\n\nexport function* fetchCollectionsStart() {\n  yield takeEvery(FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/DanielByun/Documents/java/udemy/completeReactDeveloperCourse/clothing-ecommerce-store/src/redux/saga/shop.sagas.js"],"names":["takeEvery","call","FETCH_COLLECTIONS_START","FETCH_COLLECTIONS_SUCCESS","FETCH_COLLECTIONS_FAILURE","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","error","fetchCollectionsStart"],"mappings":"AAAA;AAEA;AACA,SAASA,SAAT,EAAoBC,IAApB,QAAgC,oBAAhC;AAEA,SACEC,uBADF,EAEEC,yBAFF,EAGEC,yBAHF,QAIO,UAJP;AAKA,SAASC,SAAT,QAA0B,UAA1B;AACA,SAASC,+BAAT,QAAgD,+BAAhD;AACA,SACEC,uBADF,EAEEC,uBAFF,QAGO,wBAHP,C,CAKA;;AACA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMC,OAAO,CAACC,GAAR,CAAY,6BAAZ,CAAN;;AAEA,MAAI;AACF,UAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB,CADE,CAEF;;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMf,IAAI,CAC/BK,+BAD+B,EAE/BQ,QAF+B,CAAjC;AAID,GARD,CAQE,OAAOG,KAAP,EAAc,CAAE,CAXqB,CAavC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD,C,CAED;;AACA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMlB,SAAS,CAACE,uBAAD,EAA0BO,qBAA1B,CAAf;AACD","sourcesContent":["// effects from sagas that let us do different things\n\n// listens to every action\nimport { takeEvery, call } from \"redux-saga/effects\";\n\nimport {\n  FETCH_COLLECTIONS_START,\n  FETCH_COLLECTIONS_SUCCESS,\n  FETCH_COLLECTIONS_FAILURE\n} from \"../types\";\nimport { firestore } from \"firebase\";\nimport { convertCollectionsSnapshotToMap } from \"../../Firebase/Firebase.utils\";\nimport {\n  fetchCollectionsSuccess,\n  fetchCollectionsFailure\n} from \"../actions/shopActions\";\n\n// async code generator fuction\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"fetchCollectionsAsync fired\");\n\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    // instead of promise chains, we use generator function\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(\n      convertCollectionsSnapshotToMap,\n      snapshot\n    );\n  } catch (error) {}\n\n  // async fetch\n  // collectionRef\n  //   .get()\n  //   .then(snapshot => {\n  //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //     // dispatch the succcess call\n  //     dispatch(fetchCollectionsSuccess(collectionsMap));\n  //   })\n  //   .catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\n\n// saga\nexport function* fetchCollectionsStart() {\n  yield takeEvery(FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\n"]},"metadata":{},"sourceType":"module"}