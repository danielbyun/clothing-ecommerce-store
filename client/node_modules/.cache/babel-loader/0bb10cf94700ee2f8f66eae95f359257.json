{"ast":null,"code":"// import firebase utility library\nimport firebase from \"firebase/app\"; // get what we need from the firebase import\n\nimport \"firebase/firestore\";\nimport \"firebase/auth\"; // config info for app inside firebase\n\nconst config = {\n  apiKey: \"AIzaSyDiCTrWnxT13LNnj6OlGvU7lYQ6ogCdubQ\",\n  authDomain: \"ecommerce-store-db-7e46f.firebaseapp.com\",\n  databaseURL: \"https://ecommerce-store-db-7e46f.firebaseio.com\",\n  projectId: \"ecommerce-store-db-7e46f\",\n  storageBucket: \"ecommerce-store-db-7e46f.appspot.com\",\n  messagingSenderId: \"555076438128\",\n  appId: \"1:555076438128:web:d49dc96e53388d97c20cb5\",\n  measurementId: \"G-CMNZ6ZF41L\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(\"users/\".concat(userAuth.uid)); // get query\n\n  const snapShot = await userRef.get(); // create and store into database when it's a new user\n\n  if (!snapShot.exists) {}\n}; // initialize firebase\n\nfirebase.initializeApp(config); // exporting firebase util functions\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore(); // exporting provider from authentication library\n\nconst provider = new firebase.auth.GoogleAuthProvider(); // prompt whenever we use google authentication\n\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n}); // sign in with google popup\n\nexport const signInWithGoogle = () => auth.signInWithPopup(provider); // export the entire library just incase we want it\n\nexport default firebase;","map":{"version":3,"sources":["/Users/DanielByun/Documents/java/udemy/completeReactDeveloperCourse/clothing-ecommerce-store/src/Firebase/Firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA;AACA,OAAOA,QAAP,MAAqB,cAArB,C,CACA;;AACA,OAAO,oBAAP;AACA,OAAO,eAAP,C,CAEA;;AACA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,0CAFC;AAGbC,EAAAA,WAAW,EAAE,iDAHA;AAIbC,EAAAA,SAAS,EAAE,0BAJE;AAKbC,EAAAA,aAAa,EAAE,sCALF;AAMbC,EAAAA,iBAAiB,EAAE,cANN;AAObC,EAAAA,KAAK,EAAE,2CAPM;AAQbC,EAAAA,aAAa,EAAE;AARF,CAAf;AAWA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,iBAAuBJ,QAAQ,CAACK,GAAhC,EAAhB,CAH2E,CAK3E;;AACA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB,CAN2E,CAQ3E;;AACA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB,CACrB;AACF,CAXM,C,CAaP;;AACAnB,QAAQ,CAACoB,aAAT,CAAuBnB,MAAvB,E,CAEA;;AACA,OAAO,MAAMoB,IAAI,GAAGrB,QAAQ,CAACqB,IAAT,EAAb;AACP,OAAO,MAAMP,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB,C,CAEP;;AACA,MAAMQ,QAAQ,GAAG,IAAItB,QAAQ,CAACqB,IAAT,CAAcE,kBAAlB,EAAjB,C,CAEA;;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B,E,CAEA;;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B,C,CAEP;;AACA,eAAetB,QAAf","sourcesContent":["// import firebase utility library\nimport firebase from \"firebase/app\";\n// get what we need from the firebase import\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\n// config info for app inside firebase\nconst config = {\n  apiKey: \"AIzaSyDiCTrWnxT13LNnj6OlGvU7lYQ6ogCdubQ\",\n  authDomain: \"ecommerce-store-db-7e46f.firebaseapp.com\",\n  databaseURL: \"https://ecommerce-store-db-7e46f.firebaseio.com\",\n  projectId: \"ecommerce-store-db-7e46f\",\n  storageBucket: \"ecommerce-store-db-7e46f.appspot.com\",\n  messagingSenderId: \"555076438128\",\n  appId: \"1:555076438128:web:d49dc96e53388d97c20cb5\",\n  measurementId: \"G-CMNZ6ZF41L\"\n};\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n  // get query\n  const snapShot = await userRef.get();\n\n  // create and store into database when it's a new user\n  if (!snapShot.exists) {\n  }\n};\n\n// initialize firebase\nfirebase.initializeApp(config);\n\n// exporting firebase util functions\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\n// exporting provider from authentication library\nconst provider = new firebase.auth.GoogleAuthProvider();\n\n// prompt whenever we use google authentication\nprovider.setCustomParameters({ prompt: \"select_account\" });\n\n// sign in with google popup\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\n// export the entire library just incase we want it\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}