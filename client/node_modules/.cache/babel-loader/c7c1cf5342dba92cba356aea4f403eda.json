{"ast":null,"code":"import _defineProperty from \"/Users/DanielByun/Documents/java/udemy/completeReactDeveloperCourse/clothing-ecommerce-store/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// import firebase utility library\nimport firebase from \"firebase/app\"; // get what we need from the firebase import\n\nimport \"firebase/firestore\";\nimport \"firebase/auth\"; // config info for app inside firebase\n\nconst config = {\n  apiKey: \"AIzaSyDiCTrWnxT13LNnj6OlGvU7lYQ6ogCdubQ\",\n  authDomain: \"ecommerce-store-db-7e46f.firebaseapp.com\",\n  databaseURL: \"https://ecommerce-store-db-7e46f.firebaseio.com\",\n  projectId: \"ecommerce-store-db-7e46f\",\n  storageBucket: \"ecommerce-store-db-7e46f.appspot.com\",\n  messagingSenderId: \"555076438128\",\n  appId: \"1:555076438128:web:d49dc96e53388d97c20cb5\",\n  measurementId: \"G-CMNZ6ZF41L\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(\"users/\".concat(userAuth.uid)); // get query\n\n  const snapShot = await userRef.get(); // create and store into database when it's a new user\n\n  if (!snapShot.exists) {\n    const displayName = userAuth.displayName,\n          email = userAuth.email;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set(_objectSpread({\n        displayName,\n        email,\n        createdAt\n      }, additionalData));\n    } catch (error) {\n      console.error(\"Error creating user\", error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionAndDocuments = (collectionKey, objectsToAdd) => {\n  // create the collection using the collection key\n  const collectionRef = firestore.collection(collectionKey);\n  console.log(collectionRef);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    // get the document at the empty string\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n}; // initialize firebase\n\nfirebase.initializeApp(config); // exporting firebase util functions\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore(); // exporting provider from authentication library\n\nconst provider = new firebase.auth.GoogleAuthProvider(); // prompt whenever we use google authentication\n\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n}); // sign in with google popup\n\nexport const signInWithGoogle = () => auth.signInWithPopup(provider); // export the entire library just incase we want it\n\nexport default firebase;","map":{"version":3,"sources":["/Users/DanielByun/Documents/java/udemy/completeReactDeveloperCourse/clothing-ecommerce-store/src/Firebase/Firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","message","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","log","batch","forEach","obj","newDocRef","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":";;;;;;AAAA;AACA,OAAOA,QAAP,MAAqB,cAArB,C,CACA;;AACA,OAAO,oBAAP;AACA,OAAO,eAAP,C,CAEA;;AACA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,0CAFC;AAGbC,EAAAA,WAAW,EAAE,iDAHA;AAIbC,EAAAA,SAAS,EAAE,0BAJE;AAKbC,EAAAA,aAAa,EAAE,sCALF;AAMbC,EAAAA,iBAAiB,EAAE,cANN;AAObC,EAAAA,KAAK,EAAE,2CAPM;AAQbC,EAAAA,aAAa,EAAE;AARF,CAAf;AAWA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E,MAAI,CAACD,QAAL,EAAe;AACf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,iBAAuBJ,QAAQ,CAACK,GAAhC,EAAhB,CAF2E,CAI3E;;AACA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB,CAL2E,CAO3E;;AACA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AAAA,UACZC,WADY,GACWT,QADX,CACZS,WADY;AAAA,UACCC,KADD,GACWV,QADX,CACCU,KADD;AAEpB,UAAMC,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAI;AACF,YAAMV,OAAO,CAACW,GAAR;AACJJ,QAAAA,WADI;AAEJC,QAAAA,KAFI;AAGJC,QAAAA;AAHI,SAIDV,cAJC,EAAN;AAMD,KAPD,CAOE,OAAOa,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,wBAAqCA,KAAK,CAACE,OAA3C;AACD;AACF;;AACD,SAAOd,OAAP;AACD,CAxBM;AA0BP,OAAO,MAAMe,yBAAyB,GAAG,CAACC,aAAD,EAAgBC,YAAhB,KAAiC;AACxE;AACA,QAAMC,aAAa,GAAGjB,SAAS,CAACkB,UAAV,CAAqBH,aAArB,CAAtB;AACAH,EAAAA,OAAO,CAACO,GAAR,CAAYF,aAAZ;AAEA,QAAMG,KAAK,GAAGpB,SAAS,CAACoB,KAAV,EAAd;AACAJ,EAAAA,YAAY,CAACK,OAAb,CAAqBC,GAAG,IAAI;AAC1B;AACA,UAAMC,SAAS,GAAGN,aAAa,CAAChB,GAAd,EAAlB;AACAmB,IAAAA,KAAK,CAACV,GAAN,CAAUa,SAAV,EAAqBD,GAArB;AACD,GAJD;AAKD,CAXM,C,CAaP;;AACApC,QAAQ,CAACsC,aAAT,CAAuBrC,MAAvB,E,CAEA;;AACA,OAAO,MAAMsC,IAAI,GAAGvC,QAAQ,CAACuC,IAAT,EAAb;AACP,OAAO,MAAMzB,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB,C,CAEP;;AACA,MAAM0B,QAAQ,GAAG,IAAIxC,QAAQ,CAACuC,IAAT,CAAcE,kBAAlB,EAAjB,C,CAEA;;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B,E,CAEA;;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B,C,CAEP;;AACA,eAAexC,QAAf","sourcesContent":["// import firebase utility library\nimport firebase from \"firebase/app\";\n// get what we need from the firebase import\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\n// config info for app inside firebase\nconst config = {\n  apiKey: \"AIzaSyDiCTrWnxT13LNnj6OlGvU7lYQ6ogCdubQ\",\n  authDomain: \"ecommerce-store-db-7e46f.firebaseapp.com\",\n  databaseURL: \"https://ecommerce-store-db-7e46f.firebaseio.com\",\n  projectId: \"ecommerce-store-db-7e46f\",\n  storageBucket: \"ecommerce-store-db-7e46f.appspot.com\",\n  messagingSenderId: \"555076438128\",\n  appId: \"1:555076438128:web:d49dc96e53388d97c20cb5\",\n  measurementId: \"G-CMNZ6ZF41L\"\n};\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n  // get query\n  const snapShot = await userRef.get();\n\n  // create and store into database when it's a new user\n  if (!snapShot.exists) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.error(`Error creating user`, error.message);\n    }\n  }\n  return userRef;\n};\n\nexport const addCollectionAndDocuments = (collectionKey, objectsToAdd) => {\n  // create the collection using the collection key\n  const collectionRef = firestore.collection(collectionKey);\n  console.log(collectionRef);\n\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    // get the document at the empty string\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n};\n\n// initialize firebase\nfirebase.initializeApp(config);\n\n// exporting firebase util functions\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\n// exporting provider from authentication library\nconst provider = new firebase.auth.GoogleAuthProvider();\n\n// prompt whenever we use google authentication\nprovider.setCustomParameters({ prompt: \"select_account\" });\n\n// sign in with google popup\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\n// export the entire library just incase we want it\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}