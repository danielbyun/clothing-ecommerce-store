{"ast":null,"code":"import _slicedToArray from \"/Users/DanielByun/Documents/java/udemy/completeReactDeveloperCourse/clothing-ecommerce-store/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/DanielByun/Documents/java/udemy/completeReactDeveloperCourse/clothing-ecommerce-store/src/App.js\";\nimport React, { Fragment, useState } from \"react\";\nimport useDeepCompareEffect from \"use-deep-compare-effect\";\nimport \"./App.css\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { selectCurrentUser } from \"./redux/selectors/userSelectors\";\nimport { createStructuredSelector } from \"reselect\";\nimport Homepage from \"./Pages/Homepage/Homepage\";\nimport ShopPage from \"./Pages/Shop/Shop\";\nimport Header from \"./Components/Header/Header\";\nimport SignInAndSignUpPage from \"./Pages/Sign-In-And-Sign-Up/Sign-In-And-Sign-Up\";\nimport Checkout from \"./Pages/Checkout/Checkout\";\nimport { checkUserSession } from \"./redux/actions/userActions\"; // import { selectCollectionsForPreview } from \"./redux/selectors/shopSelectors\";\n\nconst App = props => {\n  const _useState = useState({\n    currentUser: null\n  }),\n        _useState2 = _slicedToArray(_useState, 1),\n        setUserAuth = _useState2[0];\n\n  useDeepCompareEffect(() => {// // run this once to add some data into the firebase database\n    // const { collectionsArray } = props;\n    // // don't pass the full array\n    // addCollectionAndDocuments(\n    //   \"collections\",\n    //   collectionsArray.map(({ title, items }) => ({ title, items }))\n    // );\n    // OBSERVABLE PATTERN\n    // function inside the auth library inside firebase\n    // auth.onAuthStateChanged(async userAuth => {\n    //   if (userAuth) {\n    //     const userRef = await createUserProfileDocument(userAuth);\n    //     // check if the database has updated with the new data\n    //     userRef.onSnapshot(snapShot => {\n    //       props.setCurrentUser({\n    //         id: snapShot.id,\n    //         ...snapShot.data()\n    //       });\n    //     });\n    //     setUserAuth({\n    //       currentUser: props.currentUser\n    //     });\n    //   }\n    // });\n  }, [props]);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: Homepage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/shop\",\n    component: ShopPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/checkout\",\n    component: Checkout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/signin\",\n    render: () => props.currentUser ? React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }) : React.createElement(SignInAndSignUpPage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser // collectionsArray: selectCollectionsForPreview\n\n});\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["/Users/DanielByun/Documents/java/udemy/completeReactDeveloperCourse/clothing-ecommerce-store/src/App.js"],"names":["React","Fragment","useState","useDeepCompareEffect","Route","Switch","Redirect","connect","selectCurrentUser","createStructuredSelector","Homepage","ShopPage","Header","SignInAndSignUpPage","Checkout","checkUserSession","App","props","currentUser","setUserAuth","mapStateToProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,oBAAP,MAAiC,yBAAjC;AACA,OAAO,WAAP;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,kBAAxC;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,iBAAT,QAAkC,iCAAlC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,mBAAP,MAAgC,iDAAhC;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SAASC,gBAAT,QAAiC,6BAAjC,C,CACA;;AAEA,MAAMC,GAAG,GAAGC,KAAK,IAAI;AAAA,oBACGf,QAAQ,CAAC;AAC7BgB,IAAAA,WAAW,EAAE;AADgB,GAAD,CADX;AAAA;AAAA,QACZC,WADY;;AAKnBhB,EAAAA,oBAAoB,CAAC,MAAM,CACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAzBmB,EAyBjB,CAACc,KAAD,CAzBiB,CAApB;AA2BA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAIE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAsB,IAAA,SAAS,EAAEP,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,SAAS,EAAEC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,WAAlB;AAA8B,IAAA,SAAS,EAAEG,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,KAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAC,SAFP;AAGE,IAAA,MAAM,EAAE,MACNG,KAAK,CAACC,WAAN,GAAoB,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApB,GAA0C,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJ9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAJF,CADF;AAmBD,CAnDD;;AAqDA,MAAME,eAAe,GAAGX,wBAAwB,CAAC;AAC/CS,EAAAA,WAAW,EAAEV,iBADkC,CAE/C;;AAF+C,CAAD,CAAhD;AAKA,eAAeD,OAAO,CAACa,eAAD,CAAP,CAAyBJ,GAAzB,CAAf","sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport useDeepCompareEffect from \"use-deep-compare-effect\";\nimport \"./App.css\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\nimport { connect } from \"react-redux\";\n\nimport { selectCurrentUser } from \"./redux/selectors/userSelectors\";\nimport { createStructuredSelector } from \"reselect\";\n\nimport Homepage from \"./Pages/Homepage/Homepage\";\nimport ShopPage from \"./Pages/Shop/Shop\";\nimport Header from \"./Components/Header/Header\";\nimport SignInAndSignUpPage from \"./Pages/Sign-In-And-Sign-Up/Sign-In-And-Sign-Up\";\nimport Checkout from \"./Pages/Checkout/Checkout\";\nimport { checkUserSession } from \"./redux/actions/userActions\";\n// import { selectCollectionsForPreview } from \"./redux/selectors/shopSelectors\";\n\nconst App = props => {\n  const [setUserAuth] = useState({\n    currentUser: null\n  });\n\n  useDeepCompareEffect(() => {\n    // // run this once to add some data into the firebase database\n    // const { collectionsArray } = props;\n    // // don't pass the full array\n    // addCollectionAndDocuments(\n    //   \"collections\",\n    //   collectionsArray.map(({ title, items }) => ({ title, items }))\n    // );\n    // OBSERVABLE PATTERN\n    // function inside the auth library inside firebase\n    // auth.onAuthStateChanged(async userAuth => {\n    //   if (userAuth) {\n    //     const userRef = await createUserProfileDocument(userAuth);\n    //     // check if the database has updated with the new data\n    //     userRef.onSnapshot(snapShot => {\n    //       props.setCurrentUser({\n    //         id: snapShot.id,\n    //         ...snapShot.data()\n    //       });\n    //     });\n    //     setUserAuth({\n    //       currentUser: props.currentUser\n    //     });\n    //   }\n    // });\n  }, [props]);\n\n  return (\n    <Fragment>\n      {/* shows no matter what */}\n      <Header />\n      {/* shows one of these components inside switch statement */}\n      <Switch>\n        <Route exact path=\"/\" component={Homepage} />\n        <Route path=\"/shop\" component={ShopPage} />\n        <Route exact path=\"/checkout\" component={Checkout} />\n        <Route\n          exact\n          path=\"/signin\"\n          render={() =>\n            props.currentUser ? <Redirect to=\"/\" /> : <SignInAndSignUpPage />\n          }\n        />\n      </Switch>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n  // collectionsArray: selectCollectionsForPreview\n});\n\nexport default connect(mapStateToProps)(App);\n"]},"metadata":{},"sourceType":"module"}